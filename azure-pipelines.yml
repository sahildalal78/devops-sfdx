# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
 
trigger:
  batch: "true"
  branches:
    include:
      - master
      - uat
      - qa
  paths:
    exclude:
      - README.md
      - azure-pipelines.yml
pr:
  autoCancel: "true"
  branches:
    include:
      - master
      - uat
      - qa
  paths:
    exclude:
      - README.md
jobs:
- job: ProdDeploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  steps:
    - task: DownloadSecureFile@1
      name: caCertificate
      displayName: 'Download CA certificate'
      inputs:
        secureFile: 'server.key'
    - task: UseNode@1
    - bash: 
        npm install sfdx-cli --global
      displayName: Install Salesforce CLI
    - bash: 
        sfdx force:auth:jwt:grant --clientid 3MVG9pe2TCoA1Pf4wIHx0GJMAbbbdxowbboR5uCeI6CwYuTdy.JaJrtXpke7z1Rst9DK8hR62j3XtAT4OLJT0 --jwtkeyfile $(caCertificate.secureFilePath) --username sahil@mirketa.com --instanceurl https://login.salesforce.com -a prod
      displayName: Authorize salesforce org
    - bash: 
        sfdx force:source:convert -d ./src
      displayName: Convert to deploy source
    - bash: 
        sfdx force:mdapi:deploy -l RunLocalTests -c -d ./src -u prod -w 10
      displayName: Run validation on source code
    - bash: 
        sfdx force:mdapi:deploy -d ./src -u prod -w 10
      displayName: Deploy source code to Production
- job: UATDeploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/uat'))
  steps:
    - task: DownloadSecureFile@1
      name: caCertificate
      displayName: 'Download CA certificate'
      inputs:
        secureFile: 'server.key'
    - task: UseNode@1
    - bash: 
        npm install sfdx-cli --global
      displayName: Install Salesforce CLI
    - bash: 
        sfdx force:auth:jwt:grant --clientid 3MVG9pe2TCoA1Pf4wIHx0GJMAbbbdxowbboR5uCeI6CwYuTdy.JaJrtXpke7z1Rst9DK8hR62j3XtAT4OLJT0 --jwtkeyfile $(caCertificate.secureFilePath) --username sahil@mirketa.com --instanceurl https://login.salesforce.com -a  uat
      displayName: Authorize salesforce org
    - bash: 
        sfdx force:source:convert -d ./src
      displayName: Convert to deploy source
    - bash: 
        sfdx force:mdapi:deploy -l RunLocalTests -c -d ./src -u uat -w 10
      displayName: Run validation on source code
    - bash: 
        sfdx force:mdapi:deploy -d ./src -u uat -w 10
      displayName: Deploy source code to UAT
- job: QADeploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/qa'))
  steps:
    - task: UseNode@1
    - bash: 
        npm install sfdx-cli --global
      displayName: Install Salesforce CLI
    - bash: 
         sfdx force:auth:jwt:grant --clientid 3MVG9pe2TCoA1Pf4wIHx0GJMAbbbdxowbboR5uCeI6CwYuTdy.JaJrtXpke7z1Rst9DK8hR62j3XtAT4OLJT0 --jwtkeyfile $(caCertificate.secureFilePath) --username sahil@mirketa.com --instanceurl https://login.salesforce.com -a qa
      displayName: Authorize salesforce org
    - bash: 
        sfdx force:source:convert -d ./src
      displayName: Convert to deploy source
    - bash: 
        sfdx force:mdapi:deploy -l RunLocalTests -c -d ./src -u qa -w 10
      displayName: Run validation on source code to QA
    - bash: 
        sfdx force:mdapi:deploy -d ./src -u qa -w 10
      displayName: Deploy source code